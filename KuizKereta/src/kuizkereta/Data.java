/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Data.java
 *
 * Created on Jun 3, 2017, 5:34:32 AM
 */
package kuizkereta;

import com.mysql.jdbc.PreparedStatement;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Zidan
 */
public class Data extends javax.swing.JFrame {
    public DefaultTableModel tabModel;
    Connection conn;   
    
    String host="localhost";
        String db="kuizz";  // perpus_NimAnda
        String user="root";
        String pass=""; 

    /** Creates new form Data */
    public Data() {
        initComponents();
        setJTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TKereta = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txtLap = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        bCari = new javax.swing.JButton();
        cbCari = new javax.swing.JComboBox();
        txtCari = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        bRef = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(-4144960,true));

        jPanel1.setBackground(new java.awt.Color(-4144960,true));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        TKereta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(TKereta);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 63, 838, -1));

        jPanel2.setBackground(new java.awt.Color(-12566464,true));

        jLabel1.setFont(new java.awt.Font("Serif", 0, 18));
        jLabel1.setForeground(new java.awt.Color(-1,true));
        jLabel1.setText("Data Pemesanan");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(359, 359, 359)
                .addComponent(jLabel1)
                .addContainerGap(378, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButton1.setText("Laporan");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 510, 130, 50));
        jPanel1.add(txtLap, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 500, -1, 0));

        jButton2.setText("Keluar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 540, 70, -1));

        bCari.setText("Cari");
        bCari.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCariActionPerformed(evt);
            }
        });
        jPanel1.add(bCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 520, 70, -1));

        cbCari.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Nama" }));
        jPanel1.add(cbCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 520, 70, -1));
        jPanel1.add(txtCari, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 520, 130, -1));

        jLabel2.setText("Cari");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 520, -1, -1));

        bRef.setText("Refresh");
        bRef.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bRefActionPerformed(evt);
            }
        });
        jPanel1.add(bRef, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 510, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 565, Short.MAX_VALUE)
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-884)/2, (screenSize.height-604)/2, 884, 604);
    }// </editor-fold>//GEN-END:initComponents

private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
// TODO add your handling code here:
    cetuk1();
}//GEN-LAST:event_jButton1ActionPerformed

private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
// TODO add your handling code here:
    Master tampil = new Master();
                  tampil.setVisible(true);
                 
                  dispose();
}//GEN-LAST:event_jButton2ActionPerformed

private void bCariActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCariActionPerformed
// TODO add your handling code here:
     String sql;
        int pilih = cbCari.getSelectedIndex();
        String cari = txtCari.getText();
    try {
       // conn.close();
         Class.forName("com.mysql.jdbc.Driver");
        conn  = (Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        if(pilih==0)
        sql ="Select * from transaksi WHERE id ='" +txtCari.getText() + "'";
        else
        sql ="Select * from transaksi WHERE Nama_Pemesan Like '%" +txtCari.getText() + "%'";

        PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
        ResultSet rs =st.executeQuery();

        hapusIsiJTable();
        int no=0;
        while (rs.next()) {
            no++;
       String Nama_Pemesan=rs.getString("Nama_Pemesan");
       String Nama_Kereta=rs.getString("Nama_Kereta");
       String Kelas=rs.getString("Kelas");
       String Jurusan=rs.getString("Jurusan");
       String Harga=rs.getString("Harga");
       String Jumlah_Pemesanan=rs.getString("Jumlah_Pemesanan");
       String id=rs.getString("id");
             Object Data[]={no,Nama_Pemesan,Nama_Kereta,Kelas,Jurusan,Harga,Jumlah_Pemesanan,id};
         tabModel.addRow(Data);
        }

         if(tabModel.getRowCount()>0)         
           JOptionPane.showMessageDialog(this,"Ditemukan ");        
        else
            JOptionPane.showMessageDialog(this,"Tidak Ditemukan.. ");

      }
      catch (ClassNotFoundException se) {}  // Silahkan tambahkan sendiri informasi eksepsi
      catch (SQLException se) {}                                      
                                     

}//GEN-LAST:event_bCariActionPerformed

private void bRefActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bRefActionPerformed
// TODO add your handling code here:
     String sql;
        try {
            conn.close();
            Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 

            sql ="Select * from transaksi";

            PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
            ResultSet rs =st.executeQuery();

            hapusIsiJTable();
            int no=0;
            while (rs.next()) {
                no++;
              String Nama_Pemesan=rs.getString("Nama_Pemesan");
       String Nama_Kereta=rs.getString("Nama_Kereta");
       String Kelas=rs.getString("Kelas");
       String Jurusan=rs.getString("Jurusan");
       String Harga=rs.getString("Harga");
       String Jumlah_Pemesanan=rs.getString("Jumlah_Pemesanan");
       String id=rs.getString("id");
             Object Data[]={no,Nama_Pemesan,Nama_Kereta,Kelas,Jurusan,Harga,Jumlah_Pemesanan,id};
         tabModel.addRow(Data);
            }

            if(tabModel.getRowCount()>0)
            JOptionPane.showMessageDialog(this," Berhasil refresh ");
            else
            JOptionPane.showMessageDialog(this," Gagal ");

        }
        catch (ClassNotFoundException se) {}  // Silahkan tambahkan send
        catch (SQLException se) {}
   
                                     
}//GEN-LAST:event_bRefActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Data.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Data().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TKereta;
    private javax.swing.JButton bCari;
    private javax.swing.JButton bRef;
    private javax.swing.JComboBox cbCari;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtCari;
    private javax.swing.JTextField txtLap;
    // End of variables declaration//GEN-END:variables
void cetuk1(){
    JasperReport jasRep;
     JasperPrint jasPri;
     Map<String, Object> no = new HashMap<String, Object>();
     JasperDesign jasDes;
     
     try{
      Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
         
         File report = new File("Laporan/transaksi.jrxml");
         jasDes = JRXmlLoader.load(report);
         no.clear();
         HashMap hashMap = new HashMap();
         hashMap.put("transaksi", txtLap.getText());
         jasRep = JasperCompileManager.compileReport(jasDes);
         jasPri = JasperFillManager.fillReport(jasRep, hashMap, conn);
         JasperViewer.viewReport(jasPri, false);
         
     }catch (Exception e){
         JOptionPane.showMessageDialog(null, e.getMessage());
         
     }
}
private void getData(){   // import java.sql.connection
  try{
         Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        //Membuat Variabel bertipe kelas  PreparedStatement
        //Kelas PreparedStatement berfungsi mengirimkan statement Query Ke Database
        String sql="Select * from transaksi";
        PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);  // import java.sql.PreparedStatement
        //Membuat Variabel Bertipe ResulSet
        //Kelas Resultset Berfungsi Menyimpan Dataset(Sekumpulan Data) hasil prepareStatement Query
        ResultSet rs=st.executeQuery();   // import java.sql.ResultSet;

       // Menampilkan ke JTable  melalui tabModel
        String Nama_Pemesan,Nama_Kereta,Kelas,Jurusan,Harga,Jumlah_Pemesanan,id;
        int no=0;
        while(rs.next()){
         no=no+1;
         Nama_Pemesan=rs.getString("Nama_Pemesan");
         Nama_Kereta=rs.getString("Nama_Kereta");
         Kelas=rs.getString("Kelas");
         Jurusan=rs.getString("Jurusan");
         Harga=rs.getString("Harga");
         Jumlah_Pemesanan=rs.getString("Jumlah_Pemesanan");
         id=rs.getString("id");

         Object Data[]={no,Nama_Pemesan,Nama_Kereta,Kelas,Jurusan,Harga,Jumlah_Pemesanan,id};
         tabModel.addRow(Data);
        }
          // Tutup Koneksi
          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {         // Ketika Gagal Memanggil Driver
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {                   // Ketika Gagal Sql   // import java.sql.SQLException
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }

    }// Akhir Method getData
    
    
    
private void setJTable(){
    String [] JudulKolom={"No","Nama","Nama kereta","Jurusan","Kelas","Harga","Jumlah","ID"};
    tabModel = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false, false, false, false, false};
                  
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TKereta.setModel(tabModel);
    TKereta.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TKereta.getColumnModel().getColumn(0).setPreferredWidth(30);
    TKereta.getColumnModel().getColumn(1).setPreferredWidth(100);
    TKereta.getColumnModel().getColumn(2).setPreferredWidth(160);
    TKereta.getColumnModel().getColumn(3).setPreferredWidth(300);
    TKereta.getColumnModel().getColumn(4).setPreferredWidth(250);
    TKereta.getColumnModel().getColumn(5).setPreferredWidth(100);
    TKereta.getColumnModel().getColumn(6).setPreferredWidth(100);
    TKereta.getColumnModel().getColumn(7).setPreferredWidth(100);
    
    

    getData();
}// Akhir Method setJTable
public void hapusIsiJTable() {
    int row = tabModel.getRowCount();
    for (int i = 0; i < row; i++) {
      tabModel.removeRow(0);
    }
  }
}
