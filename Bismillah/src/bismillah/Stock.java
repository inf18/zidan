/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Stock.java
 *
 * Created on May 16, 2017, 1:25:48 PM
 */
package bissmillah;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.awt.event.KeyEvent;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AttributeSet;
import javax.swing.text.BadLocationException;
import javax.swing.text.PlainDocument;

/**
 *
 * @author Zidan
 */
public class Stock extends javax.swing.JFrame {
     public DefaultTableModel tabModel;
    Connection conn;   
    
     String host="localhost";
        String db="prese";  // perpus_NimAnda
        String user="root";
        String pass=""; 

    /** Creates new form Stock */
    public Stock() {
        initComponents();
        setJTable();
        
        txtJenis.setDocument(new JTextFieldFilter(JTextFieldFilter.huruf)); 
        txtHarga.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
        txtStock.setDocument(new JTextFieldFilter(JTextFieldFilter.numeric));
    }
    void filterhuruf(KeyEvent a){
        if(Character.isAlphabetic(a.getKeyChar())){
            a.consume();
            JOptionPane.showMessageDialog(null,"Hanya Bisa Memasukan Karakter Angka");
        }
    }
    void filterangka(KeyEvent b){
        if(Character.isDigit(b.getKeyChar())){
            b.consume();
            JOptionPane.showMessageDialog(null,"Hanya Bisa Memasukan Karakter Huruf");
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtJenis = new javax.swing.JTextField();
        txtHarga = new javax.swing.JTextField();
        txtStock = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        TStock = new javax.swing.JTable();
        bTambah = new javax.swing.JButton();
        bSimpan = new javax.swing.JButton();
        bEdit = new javax.swing.JButton();
        bHapus = new javax.swing.JButton();
        bBatal = new javax.swing.JButton();
        bKeluar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Jenis");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 60, -1, -1));

        jLabel2.setText("Harga");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, -1, -1));

        jLabel3.setText("Stock");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        txtJenis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtJenisActionPerformed(evt);
            }
        });
        txtJenis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtJenisKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtJenisKeyTyped(evt);
            }
        });
        getContentPane().add(txtJenis, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 60, 110, -1));

        txtHarga.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHargaKeyTyped(evt);
            }
        });
        getContentPane().add(txtHarga, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 90, 210, -1));

        txtStock.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtStockKeyTyped(evt);
            }
        });
        getContentPane().add(txtStock, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 120, 210, -1));

        TStock.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(TStock);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 330, 100));

        bTambah.setBackground(new java.awt.Color(-4144960,true));
        bTambah.setText("Tambah");
        bTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bTambahActionPerformed(evt);
            }
        });
        getContentPane().add(bTambah, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 90, -1));

        bSimpan.setText("Simpan");
        bSimpan.setEnabled(false);
        bSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSimpanActionPerformed(evt);
            }
        });
        getContentPane().add(bSimpan, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 160, 90, -1));

        bEdit.setText("Edit");
        bEdit.setEnabled(false);
        bEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEditActionPerformed(evt);
            }
        });
        getContentPane().add(bEdit, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 160, 100, -1));

        bHapus.setText("Hapus");
        bHapus.setEnabled(false);
        bHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHapusActionPerformed(evt);
            }
        });
        getContentPane().add(bHapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 200, 90, -1));

        bBatal.setText("Batal");
        bBatal.setEnabled(false);
        bBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBatalActionPerformed(evt);
            }
        });
        getContentPane().add(bBatal, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 200, 90, -1));

        bKeluar.setText("Keluar");
        bKeluar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bKeluarActionPerformed(evt);
            }
        });
        getContentPane().add(bKeluar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 200, 100, -1));

        jPanel1.setBackground(new java.awt.Color(-12566464,true));

        jLabel4.setFont(new java.awt.Font("Serif", 0, 18));
        jLabel4.setForeground(new java.awt.Color(-1,true));
        jLabel4.setText("STOK");
        jPanel1.add(jLabel4);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 370, 40));

        jPanel2.setBackground(new java.awt.Color(-12566464,true));
        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 360, 370, 10));

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-360)/2, (screenSize.height-370)/2, 360, 370);
    }// </editor-fold>//GEN-END:initComponents

private void bSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSimpanActionPerformed
// TODO add your handling code here:
    if(bSimpan.getText().equalsIgnoreCase("Simpan")){
            simpanData();
    }else{
            rubahData();
        
        txtJenis.setText(""); // txtNoAnggota Tidak Aktif
        txtHarga.setText("");        
        txtStock.setText("");
        
        txtJenis.setEnabled(true);
    txtHarga.setEnabled(true);
    txtStock.setEnabled(true);
        
        bTambah.setEnabled(true);
        bSimpan.setEnabled(true);
        bEdit.setEnabled(true);
        bBatal.setEnabled(true);
        bHapus.setEnabled(true);
        bKeluar.setEnabled(true);   
    }   
}//GEN-LAST:event_bSimpanActionPerformed

private void bEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEditActionPerformed
// TODO add your handling code here:
     txtJenis.setEnabled(false);
    txtHarga.setEnabled(true);
    txtStock.setEnabled(true);    

        bSimpan.setText("Update"); // Merubah Teks Tombol Simpan
        
        bTambah.setEnabled(true);
        bSimpan.setEnabled(true);
        bEdit.setEnabled(true);
        bBatal.setEnabled(true);
        bHapus.setEnabled(true);
        bKeluar.setEnabled(true);  

        // Memanggil Method  ambilData_dari_JTable()
        ambilData_dari_JTable();
                                         
}//GEN-LAST:event_bEditActionPerformed

private void bHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHapusActionPerformed
// TODO add your handling code here:
    hapus_Data();
}//GEN-LAST:event_bHapusActionPerformed

private void bBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBatalActionPerformed
// TODO add your handling code here:
    txtJenis.setText(""); // txtNoAnggota Tidak Aktif
        txtHarga.setText("");        // txtNama          Aktif
        txtStock.setText("");
       // Mengatur  Enable Tombol Dan Textfield  
        txtJenis.setEnabled(false);
    txtHarga.setEnabled(false);
    txtStock.setEnabled(false);
        

        bTambah.setEnabled(true);
        bSimpan.setEnabled(true);
        bEdit.setEnabled(true);
        bBatal.setEnabled(true);
        bHapus.setEnabled(true);
        bKeluar.setEnabled(true);
                                         
}//GEN-LAST:event_bBatalActionPerformed

private void bKeluarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bKeluarActionPerformed
// TODO add your handling code here:
    dispose();
}//GEN-LAST:event_bKeluarActionPerformed

private void bTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bTambahActionPerformed
// TODO add your handling code here:
    
    txtJenis.setEnabled(true);
    txtHarga.setEnabled(true);
    txtStock.setEnabled(true);
    
    bSimpan.setText("Simpan");
    
    bTambah.setEnabled(false);
    bSimpan.setEnabled(true);
    bEdit.setEnabled(true);
    bBatal.setEnabled(true);
    bHapus.setEnabled(true);
    bKeluar.setEnabled(true);
}//GEN-LAST:event_bTambahActionPerformed

private void txtJenisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtJenisActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_txtJenisActionPerformed

private void txtJenisKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJenisKeyReleased
// TODO add your handling code here:
}//GEN-LAST:event_txtJenisKeyReleased

private void txtJenisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtJenisKeyTyped
// TODO add your handling code here:
    filterangka(evt);
}//GEN-LAST:event_txtJenisKeyTyped

private void txtHargaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHargaKeyTyped
// TODO add your handling code here:
    filterhuruf(evt);
}//GEN-LAST:event_txtHargaKeyTyped

private void txtStockKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtStockKeyTyped
// TODO add your handling code here:
    filterhuruf(evt);
}//GEN-LAST:event_txtStockKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Stock.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Stock().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TStock;
    private javax.swing.JButton bBatal;
    private javax.swing.JButton bEdit;
    private javax.swing.JButton bHapus;
    private javax.swing.JButton bKeluar;
    private javax.swing.JButton bSimpan;
    private javax.swing.JButton bTambah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField txtHarga;
    private javax.swing.JTextField txtJenis;
    private javax.swing.JTextField txtStock;
    // End of variables declaration//GEN-END:variables

    class JTextFieldFilter extends PlainDocument { 

    public static final String numeric = "0123456789"; 
    public static final String huruf = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXXYZ"; 
    public static final String alamat = " 0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXXYZ.-()"; 
    protected String acceptedChars = null; 
    protected boolean negativeAccepted = false; 

    public JTextFieldFilter(String acceptedchars) { 
    acceptedChars = acceptedchars; 
    } 

    public void setNegativeAccepted(boolean negativeaccepted) { 
    if (acceptedChars.equals(numeric) || (acceptedChars.equals(huruf))){ 
    negativeAccepted = negativeaccepted; 
    acceptedChars += "-"; 
    } 

    } 

        @Override
    public void insertString(int offset, String str, AttributeSet attr) throws BadLocationException { 
    if (str == null) 
    return; 

    for (int i = 0; i < str.length(); i++) { 
    if (acceptedChars.indexOf(String.valueOf(str.charAt(i))) == -1) 
    return; 
    } 

    if (negativeAccepted && str.indexOf("-") != -1) { 
    if (str.indexOf("-") != 0 || offset != 0) { 
    return; 
    } 
    } 

    super.insertString(offset, str, attr); 
    } 
    }
    
    
    private void getData(){   // import java.sql.connection
  try{
         Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass); 
        //Membuat Variabel bertipe kelas  PreparedStatement
        //Kelas PreparedStatement berfungsi mengirimkan statement Query Ke Database
        String sql="Select * from tiket";
        PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);  // import java.sql.PreparedStatement
        //Membuat Variabel Bertipe ResulSet
        //Kelas Resultset Berfungsi Menyimpan Dataset(Sekumpulan Data) hasil prepareStatement Query
        ResultSet rs=st.executeQuery();   // import java.sql.ResultSet;

       // Menampilkan ke JTable  melalui tabModel
        String Jenis,Harga,stock;
        int no=0;
        while(rs.next()){
         no=no+1;
         Jenis=rs.getString("Jenis");
         Harga=rs.getString("Harga");
         stock=rs.getString("stock");

         Object Data[]={no,Jenis,Harga,stock};
         tabModel.addRow(Data);
        }
          // Tutup Koneksi
          st.close();
          conn.close();
    }
    catch (ClassNotFoundException cnfe) {         // Ketika Gagal Memanggil Driver
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
           System.exit(0);
    }
    catch (SQLException sqle) {                   // Ketika Gagal Sql   // import java.sql.SQLException
           System.out.println("Proses Query Gagal = " + sqle);
           System.exit(0);
    }
    catch(Exception e){
           System.out.println("Koneksi Access Gagal " +e.getMessage());
           System.exit(0);
    }

    }// Akhir Method getData
    
   
private void setJTable(){
    String [] JudulKolom={"No","Jenis","Harga","Stock"};
    tabModel = new DefaultTableModel(null, JudulKolom){
                  boolean[] canEdit = new boolean [] { false, false, false};
                  @Override
                  public boolean isCellEditable(int rowIndex, int columnIndex) {
                   return canEdit [columnIndex];
                  }
              };
    TStock.setModel(tabModel);
    TStock.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    TStock.getColumnModel().getColumn(0).setPreferredWidth(30);
    TStock.getColumnModel().getColumn(1).setPreferredWidth(100);
    TStock.getColumnModel().getColumn(2).setPreferredWidth(160);
    TStock.getColumnModel().getColumn(3).setPreferredWidth(300);
    
    

    getData();
}// Akhir Method setJTable
public void simpanData(){
//Connection conn;
     try{
            Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
            String sql="Insert into tiket values(?,?,?)";
            PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);
            if(txtJenis.getText().isEmpty() || txtHarga.getText().isEmpty() || txtStock.getText().isEmpty() ){
                JOptionPane.showMessageDialog(this,"Isi dengan benar");
            }else{
           simpanData();
       }
                st.setString(1, txtJenis.getText());
                st.setString(2, txtHarga.getText());
                st.setString(3, txtStock.getText());
            int rs=st.executeUpdate();

            if(rs>0){
            JOptionPane.showMessageDialog(this,"Anda Berhasil Input");
      	    tampilDataKeJTable();
            }
            st.close();
            conn.close();
        }
        catch (ClassNotFoundException cnfe) {
           System.out.println("Class Driver tidak ditemukan.. : " + cnfe);
        }
        catch (SQLException sqle) {
           System.out.println("Input  Gagal = " + sqle.getMessage());
        }
        catch(Exception e){
           System.out.println("Gagal " +e.getMessage());
        }
  }

    public void rubahData() {
    // Konfirmasi sebelum melakukan perubahan data
     int ok = JOptionPane.showConfirmDialog(this,
        "Anda Yakin Ingin Mengubah Data\n Dengan No Resi = '" + txtJenis.getText() +
        "'", "Konfirmasi ",JOptionPane.YES_NO_OPTION);
    // Apabila tombol Yes ditekan
    if (ok == 0) {
      try {
        Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);
        String sql ="UPDATE tiket SET Harga = ?, stock= ? WHERE Jenis = ?";
        PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
        try {
          st.setString(1, txtHarga.getText());
          st.setString(2, txtStock.getText());
          st.setString(3, txtJenis.getText());
          
          
          st.executeUpdate();

         // Memanggil Method   tampilDataKeJTable();
          tampilDataKeJTable();

          txtJenis.setText("");
        txtHarga.setText("");
        txtStock.setText("");
          
          
        } catch (SQLException se) { }     // Silahkan tambahkan Sendiri informasi Eksepsi
      } catch (ClassNotFoundException se) {} // Silahkan tambahkan Sendiri informasi Eksepsi
      catch (SQLException se) {}  // Silahkan tambahkan Sendiri informasi Eksepsi
    }
    }
  
  
public void tampilDataKeJTable() {
    hapusIsiJTable();
    try {
        conn.close();
        Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);  
        String sql="Select * from tiket";
        PreparedStatement st=(PreparedStatement) conn.prepareStatement(sql);
        ResultSet rs=st.executeQuery();
        String Jenis,Harga,Stock;
        int no=0;
        while(rs.next()){
         no=no+1;
         Jenis=rs.getString("Jenis");
         Harga=rs.getString("Harga");
         Stock=rs.getString("stock");
         Object Data[]={no,Jenis,Harga,Stock};
         tabModel.addRow(Data);
      }
  }
    catch (Exception e) {}
}
public void hapusIsiJTable() {
    int row = tabModel.getRowCount();
    for (int i = 0; i < row; i++) {
      tabModel.removeRow(0);
    }
  }
void ambilData_dari_JTable() {
    int row = TStock.getSelectedRow();

    // Mengambil data yang dipilih pada JTable
    String Jenis = tabModel.getValueAt(row, 1).toString();
    String Harga = tabModel.getValueAt(row, 2).toString();
    String stock = tabModel.getValueAt(row, 3).toString();
    
    txtJenis.setText(Jenis);
    txtHarga.setText(Harga);
    txtStock.setText(stock);
  }
public void hapus_Data() {
    // Konfirmasi sebelum melakukan penghapusan data
    ambilData_dari_JTable();
    int ok = JOptionPane.showConfirmDialog(this,
        "Anda Yakin Ingin Menghapus Data ? = '" + txtJenis.getText() +
        "'", "Konfirmasi Menghapus Data",JOptionPane.YES_NO_OPTION);
    if (ok == 0) {     // Apabila tombol OK ditekan
      try {
       Class.forName("com.mysql.jdbc.Driver");
        conn  =(Connection) DriverManager.getConnection("jdbc:mysql://"+host+"/"+db+"?user="+user+"&password="+pass);  
        String sql = "DELETE FROM tiket WHERE Jenis = ?";
        PreparedStatement st = (PreparedStatement) conn.prepareStatement(sql);
        st.setString(1, txtJenis.getText());
        int rs=st.executeUpdate();
        if(rs>0){
        tampilDataKeJTable();
        JOptionPane.showMessageDialog(this,"Data Sudah dihapus");
        }
        txtJenis.setText("");
        txtHarga.setText("");
        txtStock.setText("");
      } catch (Exception se) {  // Silahkan tambahkan catch Exception yang lain
         JOptionPane.showMessageDialog(this,"Gagal Hapus Data.. ");
       }
    }
  }
   
}
